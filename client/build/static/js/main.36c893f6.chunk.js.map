{"version":3,"sources":["components/pages/Home.jsx","components/sessions/Login.jsx","components/sessions/Logout.jsx","components/users/Register.jsx","components/trailers/Index.jsx","components/trailers/New.jsx","components/trailers/Edit.jsx","components/Routes.jsx","components/shared/Nav.jsx","components/App.js","index.js"],"names":["Home","user","className","style","color","to","Login","setUser","useState","email","password","inputs","setInputs","redirect","setRedirect","handleSubmit","event","a","preventDefault","Axios","post","resp","status","data","toast","type","TYPE","SUCCESS","ERROR","handleInputChange","persist","target","name","value","console","log","Container","Form","onSubmit","Group","htmlFor","Control","onChange","Logout","useEffect","get","Register","firstName","lastName","emailConfirmation","passwordConfirmation","sessionStorage","setItem","JSON","stringify","Index","trailers","setTrailers","getTrailers","trailersResp","deleteTrailer","trailer","id","_id","map","i","key","trailerTitle","fullname","updatedAt","genre","rating","description","language","year","videoType","episodes","pathname","state","onClick","New","Label","as","defaultValue","step","min","max","Edit","props","location","title","content","trailerResp","Routes","exact","path","component","About","render","renderProps","NewTrailer","EditTrailer","Nav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","aria-haspopup","aria-labelledby","App","Fragment","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.36c893f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home({ user }) {\r\n  return (\r\n    <header className=\"home-cta\">\r\n      <h1 style={{ color: \"#c0392b\" }} className=\"mb-5\">\r\n        Let's Watch Trailers\r\n      </h1>\r\n\r\n      {user ? (\r\n        <Link to=\"/trailers/new\" className=\"btn btn-primary reddin\">\r\n          Add a Trailer\r\n        </Link>\r\n      ) : (\r\n        <Link to=\"/register\" className=\"btn btn-primary reddin\">\r\n          Register to Create a Trailer\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Form, Container } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const resp = await Axios.post(\"/api/authenticate\", inputs);\r\n\r\n      if (resp.status === 200) {\r\n        setUser(resp.data.user);\r\n        toast(\"Logged in successfully\", {\r\n          type: toast.TYPE.SUCCESS,\r\n        });\r\n        setRedirect(true);\r\n      } else {\r\n        toast(\"Error logging in. Please check credentials.\", {\r\n          type: toast.TYPE.ERROR,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast(\"Error logging you in. Please check credentials.\", {\r\n        type: toast.TYPE.ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [name]: value,\r\n    }));\r\n    console.log(inputs);\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/trailers\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <header>\r\n        <h1>Login</h1>\r\n      </header>\r\n\r\n      <hr />\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={inputs.email}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={inputs.password}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <button className=\"btn btn-primary\">Login</button>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Logout = ({ setUser }) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const resp = await Axios.get(\"/api/logout\");\r\n\r\n        if (resp.status === 200) {\r\n          setUser(false);\r\n          toast(\"You have successfully logged out\", {\r\n            type: toast.TYPE.SUCCESS,\r\n          });\r\n          setRedirect(true);\r\n        }\r\n      } catch (error) {\r\n        toast(\"There was an error while attempting to log you out\", {\r\n          type: toast.TYPE.ERROR,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (redirect) return <Redirect to=\"/\" />;\r\n  return null;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Form, Container } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = ({ setUser }) => {\r\n  const [inputs, setInputs] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    emailConfirmation: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n  });\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const resp = await Axios.post(\"/api/register\", inputs);\r\n\r\n      if (resp.status === 200) {\r\n        setUser(resp.data.user);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(resp.data.user));\r\n        toast(\"Successfully registered and logged in.\", {\r\n          type: toast.TYPE.SUCCESS,\r\n        });\r\n        setRedirect(true);\r\n      } else {\r\n        toast(\"Registration error.\", {\r\n          type: toast.TYPE.ERROR,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast(\"Registration error.\", {\r\n        type: toast.TYPE.ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    event.persist();\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <header>\r\n        <h1>Register</h1>\r\n      </header>\r\n\r\n      <hr />\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <Form.Control\r\n            type=\"firstName\"\r\n            name=\"firstName\"\r\n            onChange={handleInputChange}\r\n            value={inputs.firstName}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <Form.Control\r\n            type=\"lastName\"\r\n            name=\"lastName\"\r\n            onChange={handleInputChange}\r\n            value={inputs.lastName}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={inputs.email}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label htmlFor=\"emailConfirmation\">Email Confirmation:</label>\r\n          <Form.Control\r\n            type=\"emailConfirmation\"\r\n            name=\"emailConfirmation\"\r\n            onChange={handleInputChange}\r\n            value={inputs.emailConfirmation}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={inputs.password}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label htmlFor=\"passwordConfirmation\">Password Confirmation:</label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"passwordConfirmation\"\r\n            onChange={handleInputChange}\r\n            value={inputs.passwordConfirmation}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <button className=\"btn btn-primary\">Register</button>\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Index = function ({ user }) {\r\n  const [trailers, setTrailers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getTrailers();\r\n    })();\r\n  }, []);\r\n\r\n  const getTrailers = async () => {\r\n    const trailersResp = await Axios.get(\"/api/trailers\");\r\n    if (trailersResp.status === 200) setTrailers(trailersResp.data);\r\n  };\r\n\r\n  const deleteTrailer = async (trailer) => {\r\n    try {\r\n      const resp = await Axios.post(\"/api/trailers/delete\", {\r\n        id: trailer._id,\r\n      });\r\n\r\n      if (resp.status === 200)\r\n        toast(\"The trailer was deleted successfully\", {\r\n          type: toast.TYPE.SUCCESS,\r\n        });\r\n\r\n      await getTrailers();\r\n    } catch (error) {\r\n      toast(\"There was an error deleting the trailer\", {\r\n        type: toast.TYPE.ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <header>\r\n        <h1>Trailer Database</h1>\r\n      </header>\r\n\r\n      <hr />\r\n\r\n      <div className=\"content\">\r\n        {trailers &&\r\n          trailers.map((trailer, i) => (\r\n            <div key={i} className=\"card my-3\">\r\n              <div className=\"card-header clearfix\">\r\n                <div className=\"float-left\">\r\n                  <h5 className=\"card-title\">{trailer.trailerTitle}</h5>\r\n\r\n                  {trailer.user ? <small>{trailer.user.fullname}</small> : null}\r\n                </div>\r\n\r\n                <div className=\"float-right\">\r\n                  <small>{trailer.updatedAt}</small>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">Genre: {trailer.genre}</p>\r\n                <p className=\"card-text\">Rating: {trailer.rating}</p>\r\n                <p className=\"card-text\">Description: {trailer.description}</p>\r\n                <p className=\"card-text\">Language: {trailer.language}</p>\r\n                <p className=\"card-text\">Release Year: {trailer.year}</p>\r\n                <p className=\"card-text\">Video Type: {trailer.videoType}</p>\r\n                <p className=\"card-text\">Episodes: {trailer.episodes}</p>\r\n              </div>\r\n\r\n              {user ? (\r\n                <div className=\"card-footer\">\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/trailers/edit\",\r\n                      state: {\r\n                        id: trailer._id,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </Link>\r\n\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/trailers/\",\r\n                      state: {\r\n                        id: trailer._id,\r\n                      },\r\n                    }}\r\n                    onClick={() => deleteTrailer(trailer)}\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </Link>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Container } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst New = function () {\r\n  const genres = [\r\n    `Action`,\r\n    `Comedy`,\r\n    `Horror`,\r\n    `Romance`,\r\n    `Thiller`,\r\n    `Drama`,\r\n    `Mystery`,\r\n    `Crime`,\r\n    `Animation`,\r\n    `Adventure`,\r\n    `Fantasy`,\r\n    `Family`,\r\n    `Sci-Fi`,\r\n    `Western`,\r\n  ];\r\n\r\n  const ratings = [`G`, `PG`, `PG-13`, `R`, `NC-17`, `A`];\r\n\r\n  const videoTypes = [`Movie`, `TV Show`];\r\n\r\n  const [inputs, setInputs] = useState({\r\n    trailerTitle: \"\",\r\n    description: \"\",\r\n    genre: `Action`,\r\n    rating: `PG`,\r\n    year: \"\",\r\n    episodes: \"\",\r\n    language: \"\",\r\n    videoType: `Movie`,\r\n  });\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const resp = await Axios.post(\"/api/trailers\", inputs);\r\n\r\n      if (resp.status === 200) {\r\n        toast(\"The trailer was created successfully\", {\r\n          type: toast.TYPE.SUCCESS,\r\n        });\r\n        setRedirect(true);\r\n      } else {\r\n        toast(\"There was an issue creating the trailer\", {\r\n          type: toast.TYPE.ERROR,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast(\"There was an issue creating the trailer\", {\r\n        type: toast.TYPE.ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = async (event) => {\r\n    event.persist();\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  if (redirect) return <Redirect to=\"/trailers\" />;\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <header>\r\n        <h1>Add new Trailer</h1>\r\n      </header>\r\n\r\n      <hr />\r\n\r\n      <div>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Trailer Title:</Form.Label>\r\n            <Form.Control\r\n              name=\"trailerTitle\"\r\n              onChange={handleInputChange}\r\n              value={inputs.trailerTitle}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Description:</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"description\"\r\n              onChange={handleInputChange}\r\n              value={inputs.description}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Genre:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"genre\"\r\n              onChange={handleInputChange}\r\n              defaultValue={inputs.genre}\r\n            >\r\n              {genres.map((type, i) => (\r\n                <option key={i} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Rating:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"rating\"\r\n              onChange={handleInputChange}\r\n              defaultValue={inputs.rating}\r\n            >\r\n              {ratings.map((type, i) => (\r\n                <option key={i} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Video Type:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"videoTypes\"\r\n              onChange={handleInputChange}\r\n              defaultValue={inputs.videoType}\r\n            >\r\n              {videoTypes.map((type, i) => (\r\n                <option key={i} value={type}>\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Release Date:</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              name=\"year\"\r\n              onChange={handleInputChange}\r\n              value={inputs.year}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Language:</Form.Label>\r\n            <Form.Control\r\n              name=\"language\"\r\n              onChange={handleInputChange}\r\n              value={inputs.language}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Episodes:</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              name=\"episodes\"\r\n              step=\"1\"\r\n              min=\"1\"\r\n              max=\"30\"\r\n              onChange={handleInputChange}\r\n              value={inputs.episodes}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Create\r\n            </button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default New;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Container } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Edit = function (props) {\r\n  const id = props.location.state.id; // found in docs for react router\r\n\r\n  const [inputs, setInputs] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n    status: \"DRAFT\",\r\n  });\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const trailerResp = await Axios.get(`/api/trailers/${id}`);\r\n      if (trailerResp.status === 200) setInputs(trailerResp.data);\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const resp = await Axios.post(\"/api/trailers/update\", inputs);\r\n\r\n      if (resp.status === 200) {\r\n        toast(\"The trailer was updated successfully\", {\r\n          type: toast.TYPE.SUCCESS,\r\n        });\r\n        setRedirect(true);\r\n      } else {\r\n        toast(\"There was an issue updating the trailer\", {\r\n          type: toast.TYPE.ERROR,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast(\"There was an issue updating the trailer\", {\r\n        type: toast.TYPE.ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = async (event) => {\r\n    event.persist();\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setInputs((inputs) => ({\r\n      ...inputs,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  if (redirect) return <Redirect to=\"/trailers\" />;\r\n\r\n  return (\r\n    <Container className=\"my-5\">\r\n      <header>\r\n        <h1>Edit Trailer</h1>\r\n      </header>\r\n\r\n      <hr />\r\n\r\n      <div>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Title:</Form.Label>\r\n            <Form.Control\r\n              name=\"title\"\r\n              onChange={handleInputChange}\r\n              value={inputs.title}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Content:</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"content\"\r\n              onChange={handleInputChange}\r\n              value={inputs.content}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Status:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"status\"\r\n              onChange={handleInputChange}\r\n              defaultValue={inputs.status || \"DRAFT\"}\r\n            >\r\n              <option value=\"DRAFT\">draft</option>\r\n              <option value=\"PUBLISHED\">published</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Update\r\n            </button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport About from \"./pages/About\";\r\nimport Login from \"./sessions/Login\";\r\nimport Logout from \"./sessions/Logout\";\r\n\r\nimport Register from \"./users/Register\";\r\n\r\nimport Trailers from \"./trailers/Index\";\r\nimport NewTrailer from \"./trailers/New\";\r\nimport EditTrailer from \"./trailers/Edit\";\r\n\r\nfunction Routes({ user, setUser }) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/about\" component={About} />\r\n      <Route\r\n        exact\r\n        path=\"/login\"\r\n        render={(renderProps) => <Login {...renderProps} setUser={setUser} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/logout\"\r\n        render={(renderProps) => <Logout {...renderProps} setUser={setUser} />}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/register\"\r\n        render={(renderProps) => (\r\n          <Register {...renderProps} setUser={setUser} />\r\n        )}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/trailers\"\r\n        render={(renderProps) => <Trailers {...renderProps} user={user} />}\r\n      />\r\n      <Route exact path=\"/trailers/new\" component={NewTrailer} />\r\n      <Route exact path=\"/trailers/edit\" component={EditTrailer} />\r\n    </Switch>\r\n  );\r\n}\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nfunction Nav({ user }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        S.P.I.C.E.D\r\n      </Link>\r\n\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              About\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact\" className=\"nav-link\">\r\n              Contact\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item dropdown\">\r\n            <a\r\n              href=\"\"\r\n              className=\"nav-link dropdown-toggle\"\r\n              id=\"trailersDropdown\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Trailers\r\n            </a>\r\n\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"trailersDropdown\">\r\n              <Link to=\"/trailers\" className=\"dropdown-item\">\r\n                Trailers Database\r\n              </Link>\r\n\r\n              {user ? (\r\n                <Fragment>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <Link to=\"/trailers/new\" className=\"dropdown-item\">\r\n                    Add Trailer\r\n                  </Link>\r\n                </Fragment>\r\n              ) : null}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav\">\r\n          {user ? (\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/logout\" className=\"nav-link\">\r\n                <i className=\"fa fa-sign-out\"></i>\r\n                Logout\r\n              </Link>\r\n            </li>\r\n          ) : (\r\n            <Fragment>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/register\" className=\"nav-link\">\r\n                  <i className=\"fa fa-user-plus\"></i>\r\n                  Register\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/login\" className=\"nav-link\">\r\n                  <i className=\"fa fa-sign-in\"></i>\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\nimport Routes from \"./Routes\";\nimport Nav from \"./shared/Nav\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [user, setUser] = useState(false);\n\n  return (\n    <React.Fragment>\n      <ToastContainer />\n      <Nav user={user} />\n      <Routes user={user} setUser={setUser} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}